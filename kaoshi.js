const res = JSON.stringify({
	code: 200,
	message: "成功",
	data: {
		scores: "学生中心查看",
		statusName: "已考试",
		exampaper: {
			cqList: [
				{
					select: "0",
					title: "<p>在react中数据流动是什么规则( )</p>",
					choices: {
						A: "单项数据流",
						B: "双向数据绑定",
						C: "函数传参",
						D: "data传参",
					},
					qid: 2039,
				},
				{
					select: "0",
					title: "<p>react中组件内部状态是( )</p>",
					choices: { A: "props", B: "data", C: "state", D: "start" },
					qid: 2040,
				},
				{
					select: "0",
					title:
						"<p>如果一个列表没有行为，没有状态，应该使用那种组件定义的方式( )</p>",
					choices: {
						A: "class定义",
						B: "函数定义",
						C: "creatClass定义",
						D: "以上都不对",
					},
					qid: 2044,
				},
				{
					select: "0",
					title: "<p>在react中,想要修改state需要使用以下哪个( )</p>",
					choices: { A: "setState", B: "state", C: "this.state", D: "props" },
					qid: 2048,
				},
				{
					select: "1",
					title: "<p>以下对虚拟dom描述正确的是( )</p>",
					choices: {
						A: "它直接用JavaScript实现了DOM树",
						B:
							"组件的HTML结构并不会直接生成DOM，而是映射生成虚拟的JavaScript DOM结构",
						C:
							"React通过对虚拟DOM上实现了一个 diff 算法找出最小变更，再把这些变更写入实际的DOM中",
						D:
							"虚拟DOM以JS结构的形式存在，计算性能会比较好，而且由于减少了实际DOM操作次数，性能会有较大提升",
					},
					qid: 2050,
				},
				{
					select: "0",
					title: "<p>在state修改后哪个生命周期不会执行( )</p>",
					choices: {
						A: "componentWillReceiveProps",
						B: "shouldComponentUpdate",
						C: "render",
						D: "componentWillUpdate",
					},
					qid: 2056,
				},
				{
					select: "0",
					title: "<p>想在一个组件内操作dom应该在哪个什么周期( )</p>",
					choices: {
						A: "componentWillMount",
						B: "componentWillUpdate",
						C: "componentDidMount",
						D: "componentWillReceiveProps",
					},
					qid: 2057,
				},
				{
					select: "0",
					title:
						"<p>事件对象event上的哪个属性可以返回触发当前事件的元素(事件的目标节点)( )</p>",
					choices: { A: "currentTarget", B: "target", C: "value", D: "dom" },
					qid: 2060,
				},
				{
					select: "0",
					title: "<p>react中跨级通信最优的方案是( )</p>",
					choices: {
						A: "props逐层传递",
						B: "context",
						C: "回调函数",
						D: "自定义事件",
					},
					qid: 2061,
				},
				{
					select: "0",
					title: "<p>在react中如何将input输入的值和state状态绑定到一起( )</p>",
					choices: { A: "v-model", B: "ng-model", C: "受控组件", D: "r-model" },
					qid: 2063,
				},
				{
					select: "0",
					title: "<p>在组件更新期优化的话主要是优化哪个生命周期( )</p>",
					choices: {
						A: "shouldComponentUpdate",
						B: "componentWillUpdate",
						C: "componentDidMount",
						D: "componentWillReceiveProps",
					},
					qid: 2067,
				},
				{
					select: "0",
					title:
						"<p>react中子组件(类组件)中读取props的值应该使用什么属性( )</p>",
					choices: { A: "this.props", B: "this.prop", C: "props", D: "prop" },
					qid: 2068,
				},
				{
					select: "1",
					title: "<p>react存在期（更新阶段）包含哪些方法( )</p>",
					choices: {
						A: "componentWillReceiveProps",
						B: "shouldComponentUpdate",
						C: "componentWillUpdate",
						D: "componentDidUpdate",
					},
					qid: 2074,
				},
				{
					select: "1",
					title: "<p>react可以使用下面哪些方法绑定this( )</p>",
					choices: { A: "bind方法", B: "箭头函数", C: "call方法", D: "继承" },
					qid: 2076,
				},
				{
					select: "1",
					title: "<p>react中针对于表单的处理有( )</p>",
					choices: { A: "受控组件", B: "非受控组件", C: "model", D: "scope" },
					qid: 2101,
				},
				{
					select: "0",
					title: "<p>在react-router-dom中用来做重定向的组件是( )</p>",
					choices: { A: "Redirect", B: "Switch", C: "Link", D: "Route" },
					qid: 2112,
				},
				{
					select: "0",
					title: "<p>在react中connect函数中第几个参数可以获取到state( )</p>",
					choices: { A: "1", B: "2", C: "3", D: "4" },
					qid: 2113,
				},
				{
					select: "0",
					title: "<p>在react中实现子向父传参，以下说法正确的是( )</p>",
					choices: {
						A: "通过props可以实现子向父传参",
						B: "可以通过子级调用父级组件的props属性实现子向父通信",
						C: "通过state可以实现子向父通信",
						D: "可以通过constructor实现子向父传参",
					},
					qid: 2118,
				},
				{
					select: "1",
					title: "<p>下面哪些组件是路由相关组件( )</p>",
					choices: { A: "Switch", B: "Redirect", C: "Routers", D: "Route" },
					qid: 2121,
				},
				{
					select: "0",
					title:
						'<p><span style="color: rgb(96, 98, 102);">如何在class组件形式中定义默认的props( )</span></p>',
					choices: {
						A: "默认生成",
						B: "componentName.defaultProps = {}",
						C: "getDefaultProps",
						D: "defaultProps",
					},
					qid: 2136,
				},
			],
			sgkExampaper: {
				cscores:
					'{"2067":5,"2056":5,"2121":5,"2044":5,"2076":5,"2074":5,"2063":5,"2040":5,"2061":5,"2050":5,"2060":5,"2118":5,"2039":5,"2136":5,"2048":5,"2113":5,"2112":5,"2057":5,"2068":5,"2101":5}',
				actUser: "郑常富",
				ptype: 200,
				zscore: 0,
				zjson: "",
				title: "web200721SZ(React基础)章节考试题",
				cjson:
					"2121,2112,2118,2061,2074,2067,2057,2056,2136,2068,2048,2040,2063,2113,2101,2076,2060,2050,2044,2039",
				isstart: 1,
				hscore: 0,
				createTime: "2020-11-06 17:15:36",
				param: {
					cscores: {
						2067: 5,
						2056: 5,
						2121: 5,
						2044: 5,
						2076: 5,
						2074: 5,
						2063: 5,
						2040: 5,
						2061: 5,
						2050: 5,
						2060: 5,
						2118: 5,
						2039: 5,
						2136: 5,
						2048: 5,
						2113: 5,
						2112: 5,
						2057: 5,
						2068: 5,
						2101: 5,
					},
				},
				hjson: "",
				id: 620,
				cscore: 5,
				actUserId: 100077,
				sjson: "",
				sscore: 0,
			},
			sscoreTotal: 0,
			zcount: 1,
			ztextList: [],
			zscoreTotal: 0,
			stuchoices2ScoreTotal: 0,
			zscore: 0,
			stuchoices2ExamCount: 1,
			stuchoicesScoreTotal: 100,
			tid: 620,
			hscore: 0,
			hqList: [],
			stuchoicesExamCount: 20,
			scount: 1,
			stextList: [],
			cscore: 5,
			sscore: 0,
		},
		status: 1,
	},
});
